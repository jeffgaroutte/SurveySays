// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SurveySays.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Get the next question in the survey")]
    public partial class GetTheNextQuestionInTheSurveyFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "3 Get the next question in the survey.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Get the next question in the survey", "In order to answer all of required the questions in the survey\r\nAs the person tak" +
                    "ing the survey\r\nI want to be given the next question in the survey based on the " +
                    "questions pre-requsites", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
 #line 7
 testRunner.Given("I have started taking a survey", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Answer"});
            table1.AddRow(new string[] {
                        "red"});
            table1.AddRow(new string[] {
                        "blue"});
            table1.AddRow(new string[] {
                        "green"});
            table1.AddRow(new string[] {
                        "gray"});
            table1.AddRow(new string[] {
                        "bright neon pink"});
#line 8
 testRunner.And("the first question is \"what is your favorite color\" with the following answers", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Answer"});
            table2.AddRow(new string[] {
                        "Dog"});
            table2.AddRow(new string[] {
                        "Cat"});
            table2.AddRow(new string[] {
                        "Fish"});
            table2.AddRow(new string[] {
                        "Mouse"});
            table2.AddRow(new string[] {
                        "Bird"});
#line 15
 testRunner.And("the second question is \"what is your favorite animal\" with the following answers", ((string)(null)), table2, "And ");
#line 22
 testRunner.And("the third question is \"What... is the air-speed velocity of an unladen swallow\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Answer"});
            table3.AddRow(new string[] {
                        "The lady of the lake threw a sword at me"});
            table3.AddRow(new string[] {
                        "I drew it from the stone"});
            table3.AddRow(new string[] {
                        "As an evil overlord; I took over the world"});
            table3.AddRow(new string[] {
                        "Mouse"});
            table3.AddRow(new string[] {
                        "I am not a king"});
#line 23
 testRunner.And("the forth question is \"Well how\'d you become king then?\" with the answers", ((string)(null)), table3, "And ");
#line 30
 testRunner.And("the fifth question is \"what is your name\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get the next question when it does not have pre-requsites")]
        [NUnit.Framework.CategoryAttribute("NextQuestion")]
        public virtual void GetTheNextQuestionWhenItDoesNotHavePre_Requsites()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get the next question when it does not have pre-requsites", new string[] {
                        "NextQuestion"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 6
 this.FeatureBackground();
#line 34
 testRunner.Given("I answered the first question with \"red\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
 testRunner.When("I get the next question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.Then("the question should be the second question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get the next question when it does not have pre-requsites and I have answered a f" +
            "ew questions")]
        [NUnit.Framework.CategoryAttribute("NextQuestion")]
        public virtual void GetTheNextQuestionWhenItDoesNotHavePre_RequsitesAndIHaveAnsweredAFewQuestions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get the next question when it does not have pre-requsites and I have answered a f" +
                    "ew questions", new string[] {
                        "NextQuestion"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 6
 this.FeatureBackground();
#line 40
 testRunner.Given("I answered the first question with \"blue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.And("I answered the  second question with \"Mouse\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.When("I get the the next question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.Then("the question should be the third question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get the next question when it does have pre-requsites that I have not met")]
        [NUnit.Framework.CategoryAttribute("NextQuestion")]
        public virtual void GetTheNextQuestionWhenItDoesHavePre_RequsitesThatIHaveNotMet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get the next question when it does have pre-requsites that I have not met", new string[] {
                        "NextQuestion"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 6
 this.FeatureBackground();
#line 47
 testRunner.Given("I answered the first question with \"green\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
 testRunner.And("I answered the second question with \"Mouse\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("the third question has the prequsite that the second question was answered with \"" +
                    "bird\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.When("I get the the next question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.Then("the question should be the forth question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get the next question when it does have pre-requsites that I have met")]
        [NUnit.Framework.CategoryAttribute("NextQuestion")]
        public virtual void GetTheNextQuestionWhenItDoesHavePre_RequsitesThatIHaveMet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get the next question when it does have pre-requsites that I have met", new string[] {
                        "NextQuestion"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 6
 this.FeatureBackground();
#line 55
 testRunner.Given("I answered the first question with \"gray\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
 testRunner.And("I answered the second question with \"bird\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And("the third question has the prequsite that the second question was answered with \"" +
                    "bird\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.When("I get the the next question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.Then("the question should be the third question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get the next question when I have answered all the questions (in progess)")]
        [NUnit.Framework.CategoryAttribute("NextQuestion")]
        public virtual void GetTheNextQuestionWhenIHaveAnsweredAllTheQuestionsInProgess()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get the next question when I have answered all the questions (in progess)", new string[] {
                        "NextQuestion"});
#line 62
this.ScenarioSetup(scenarioInfo);
#line 6
 this.FeatureBackground();
#line 63
 testRunner.Given("I answered the first question with \"blue\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 64
 testRunner.And("I answered the  second question with \"Mouse\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.When("I get the the next question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.Then("the question should be the third question", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
